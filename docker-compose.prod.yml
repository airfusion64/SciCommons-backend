services:
  reverse-proxy:
    image: traefik:v3.1
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=armanalam032001@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock

  web:
    build: .
    command: >
      sh -c "redis-server --daemonize yes && 
              poetry run python manage.py migrate && 
              poetry run python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.guestbook.rule=Host(`backend.scicommons.org/`)"
      - "traefik.http.routers.guestbook.entrypoints=websecure"
      - "traefik.http.routers.guestbook.tls.certresolver=myresolver"
      - "traefik.http.services.web.loadbalancer.server.port=8000"
    depends_on:
      - redis
      - celery

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  celery:
    build: .
    command: celery -A myapp worker --loglevel=info --concurrency=5
    volumes:
      - .:/app
    depends_on:
      - redis

volumes:
  letsencrypt:
